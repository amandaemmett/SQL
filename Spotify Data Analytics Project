#For this project, I downloaded Spotify data from Kaggle. Then I created a table to insert Spotify data into. Finally, I performed analytics on the data using SQL. 

#Creating the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL:

SELECT *
FROM bit_db.spotifydata

/*What are the top 5 most danceable tracks?*/
SELECT track_name, danceability
FROM bit_db.spotifydata
ORDER BY danceability DESC
LIMIT 5

/*What is the average liveness for each artist?*/
SELECT artist_name, avg(liveness)
FROM bit_db.spotifydata
GROUP BY artist_name
ORDER BY avg(liveness) DESC

/*Which key is the shortest song in, and what is the song title?*/
SELECT track_name, song_key
FROM bit_db.spotifydata
ORDER BY duration_ms
LIMIT 1

/*What are the top 10 most popular tracks?*/
SELECT track_name
FROM bit_db.spotifydata
ORDER BY popularity DESC
LIMIT 10

/*Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.*/
WITH popularity_average_CTE AS(
    SELECT s.artist_name,avg(s.popularity) AS average_popularity  
    FROM spotifydata s
    GROUP BY s.artist_name
    )
    SELECT artist_name, 
        average_popularity, 
        'Top Star' AS tag
    FROM popularity_average_CTE
    WHERE average_popularity>=90;
